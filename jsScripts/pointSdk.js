/* eslint-disable */
(()=>{function e(e){return e&&e.__esModule?e.default:e}var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},r={},s={},n=t.parcelRequireaa52;null==n&&((n=function(e){if(e in r)return r[e].exports;if(e in s){var t=s[e];delete s[e];var n={id:e,exports:{}};return r[e]=n,t.call(n.exports,n,n.exports),n.exports}var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}).register=function(e,t){s[e]=t},t.parcelRequireaa52=n),n.register("cCnjn",(function(e,t){var r;"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self&&self,r=function(e){"use strict";if("undefined"==typeof browser||Object.getPrototypeOf(browser)!==Object.prototype){const t="The message port closed before a response was received.",r="Returning a Promise is the preferred way to send a reply from an onMessage/onMessageExternal listener, as the sendResponse will be removed from the specs (See https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onMessage)",s=e=>{const s={alarms:{clear:{minArgs:0,maxArgs:1},clearAll:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getAll:{minArgs:0,maxArgs:0}},bookmarks:{create:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},getChildren:{minArgs:1,maxArgs:1},getRecent:{minArgs:1,maxArgs:1},getSubTree:{minArgs:1,maxArgs:1},getTree:{minArgs:0,maxArgs:0},move:{minArgs:2,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeTree:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}},browserAction:{disable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},enable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},getBadgeBackgroundColor:{minArgs:1,maxArgs:1},getBadgeText:{minArgs:1,maxArgs:1},getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},openPopup:{minArgs:0,maxArgs:0},setBadgeBackgroundColor:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setBadgeText:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},browsingData:{remove:{minArgs:2,maxArgs:2},removeCache:{minArgs:1,maxArgs:1},removeCookies:{minArgs:1,maxArgs:1},removeDownloads:{minArgs:1,maxArgs:1},removeFormData:{minArgs:1,maxArgs:1},removeHistory:{minArgs:1,maxArgs:1},removeLocalStorage:{minArgs:1,maxArgs:1},removePasswords:{minArgs:1,maxArgs:1},removePluginData:{minArgs:1,maxArgs:1},settings:{minArgs:0,maxArgs:0}},commands:{getAll:{minArgs:0,maxArgs:0}},contextMenus:{remove:{minArgs:1,maxArgs:1},removeAll:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},cookies:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:1,maxArgs:1},getAllCookieStores:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},devtools:{inspectedWindow:{eval:{minArgs:1,maxArgs:2,singleCallbackArg:!1}},panels:{create:{minArgs:3,maxArgs:3,singleCallbackArg:!0},elements:{createSidebarPane:{minArgs:1,maxArgs:1}}}},downloads:{cancel:{minArgs:1,maxArgs:1},download:{minArgs:1,maxArgs:1},erase:{minArgs:1,maxArgs:1},getFileIcon:{minArgs:1,maxArgs:2},open:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},pause:{minArgs:1,maxArgs:1},removeFile:{minArgs:1,maxArgs:1},resume:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},extension:{isAllowedFileSchemeAccess:{minArgs:0,maxArgs:0},isAllowedIncognitoAccess:{minArgs:0,maxArgs:0}},history:{addUrl:{minArgs:1,maxArgs:1},deleteAll:{minArgs:0,maxArgs:0},deleteRange:{minArgs:1,maxArgs:1},deleteUrl:{minArgs:1,maxArgs:1},getVisits:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1}},i18n:{detectLanguage:{minArgs:1,maxArgs:1},getAcceptLanguages:{minArgs:0,maxArgs:0}},identity:{launchWebAuthFlow:{minArgs:1,maxArgs:1}},idle:{queryState:{minArgs:1,maxArgs:1}},management:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},getSelf:{minArgs:0,maxArgs:0},setEnabled:{minArgs:2,maxArgs:2},uninstallSelf:{minArgs:0,maxArgs:1}},notifications:{clear:{minArgs:1,maxArgs:1},create:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:0},getPermissionLevel:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},pageAction:{getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},hide:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},permissions:{contains:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},request:{minArgs:1,maxArgs:1}},runtime:{getBackgroundPage:{minArgs:0,maxArgs:0},getPlatformInfo:{minArgs:0,maxArgs:0},openOptionsPage:{minArgs:0,maxArgs:0},requestUpdateCheck:{minArgs:0,maxArgs:0},sendMessage:{minArgs:1,maxArgs:3},sendNativeMessage:{minArgs:2,maxArgs:2},setUninstallURL:{minArgs:1,maxArgs:1}},sessions:{getDevices:{minArgs:0,maxArgs:1},getRecentlyClosed:{minArgs:0,maxArgs:1},restore:{minArgs:0,maxArgs:1}},storage:{local:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},managed:{get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1}},sync:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}}},tabs:{captureVisibleTab:{minArgs:0,maxArgs:2},create:{minArgs:1,maxArgs:1},detectLanguage:{minArgs:0,maxArgs:1},discard:{minArgs:0,maxArgs:1},duplicate:{minArgs:1,maxArgs:1},executeScript:{minArgs:1,maxArgs:2},get:{minArgs:1,maxArgs:1},getCurrent:{minArgs:0,maxArgs:0},getZoom:{minArgs:0,maxArgs:1},getZoomSettings:{minArgs:0,maxArgs:1},goBack:{minArgs:0,maxArgs:1},goForward:{minArgs:0,maxArgs:1},highlight:{minArgs:1,maxArgs:1},insertCSS:{minArgs:1,maxArgs:2},move:{minArgs:2,maxArgs:2},query:{minArgs:1,maxArgs:1},reload:{minArgs:0,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeCSS:{minArgs:1,maxArgs:2},sendMessage:{minArgs:2,maxArgs:3},setZoom:{minArgs:1,maxArgs:2},setZoomSettings:{minArgs:1,maxArgs:2},update:{minArgs:1,maxArgs:2}},topSites:{get:{minArgs:0,maxArgs:0}},webNavigation:{getAllFrames:{minArgs:1,maxArgs:1},getFrame:{minArgs:1,maxArgs:1}},webRequest:{handlerBehaviorChanged:{minArgs:0,maxArgs:0}},windows:{create:{minArgs:0,maxArgs:1},get:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:1},getCurrent:{minArgs:0,maxArgs:1},getLastFocused:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}}};if(0===Object.keys(s).length)throw new Error("api-metadata.json has not been included in browser-polyfill");class n extends WeakMap{get(e){return this.has(e)||this.set(e,this.createItem(e)),super.get(e)}constructor(e,t){super(t),this.createItem=e}}const a=(t,r)=>(...s)=>{e.runtime.lastError?t.reject(e.runtime.lastError):r.singleCallbackArg||s.length<=1&&!1!==r.singleCallbackArg?t.resolve(s[0]):t.resolve(s)},o=e=>1==e?"argument":"arguments",i=(e,t,r)=>new Proxy(t,{apply:(t,s,n)=>r.call(s,e,...n)});let g=Function.call.bind(Object.prototype.hasOwnProperty);const m=(e,t={},r={})=>{let s=Object.create(null),n={has:(t,r)=>r in e||r in s,get(n,l,c){if(l in s)return s[l];if(!(l in e))return;let d=e[l];if("function"==typeof d)if("function"==typeof t[l])d=i(e,e[l],t[l]);else if(g(r,l)){let t=((e,t)=>function(r,...s){if(s.length<t.minArgs)throw new Error(`Expected at least ${t.minArgs} ${o(t.minArgs)} for ${e}(), got ${s.length}`);if(s.length>t.maxArgs)throw new Error(`Expected at most ${t.maxArgs} ${o(t.maxArgs)} for ${e}(), got ${s.length}`);return new Promise(((n,o)=>{if(t.fallbackToNoCallback)try{r[e](...s,a({resolve:n,reject:o},t))}catch(a){console.warn(`${e} API method doesn't seem to support the callback parameter, falling back to call it without a callback: `,a),r[e](...s),t.fallbackToNoCallback=!1,t.noCallback=!0,n()}else t.noCallback?(r[e](...s),n()):r[e](...s,a({resolve:n,reject:o},t))}))})(l,r[l]);d=i(e,e[l],t)}else d=d.bind(e);else if("object"==typeof d&&null!==d&&(g(t,l)||g(r,l)))d=m(d,t[l],r[l]);else{if(!g(r,"*"))return Object.defineProperty(s,l,{configurable:!0,enumerable:!0,get:()=>e[l],set(t){e[l]=t}}),d;d=m(d,t[l],r["*"])}return s[l]=d,d},set:(t,r,n,a)=>(r in s?s[r]=n:e[r]=n,!0),defineProperty:(e,t,r)=>Reflect.defineProperty(s,t,r),deleteProperty:(e,t)=>Reflect.deleteProperty(s,t)},l=Object.create(e);return new Proxy(l,n)},l=e=>({addListener(t,r,...s){t.addListener(e.get(r),...s)},hasListener:(t,r)=>t.hasListener(e.get(r)),removeListener(t,r){t.removeListener(e.get(r))}});let c=!1;const d=new n((e=>"function"!=typeof e?e:function(t,s,n){let a,o,i=!1,g=new Promise((e=>{a=function(t){c||(console.warn(r,(new Error).stack),c=!0),i=!0,e(t)}}));try{o=e(t,s,a)}catch(e){o=Promise.reject(e)}const m=!0!==o&&(l=o)&&"object"==typeof l&&"function"==typeof l.then;var l;if(!0!==o&&!m&&!i)return!1;const d=e=>{e.then((e=>{n(e)}),(e=>{let t;t=e&&(e instanceof Error||"string"==typeof e.message)?e.message:"An unexpected error occurred",n({__mozWebExtensionPolyfillReject__:!0,message:t})})).catch((e=>{console.error("Failed to send onMessage rejected reply",e)}))};return d(m?o:g),!0})),A=({reject:r,resolve:s},n)=>{e.runtime.lastError?e.runtime.lastError.message===t?s():r(e.runtime.lastError):n&&n.__mozWebExtensionPolyfillReject__?r(new Error(n.message)):s(n)},u=(e,t,r,...s)=>{if(s.length<t.minArgs)throw new Error(`Expected at least ${t.minArgs} ${o(t.minArgs)} for ${e}(), got ${s.length}`);if(s.length>t.maxArgs)throw new Error(`Expected at most ${t.maxArgs} ${o(t.maxArgs)} for ${e}(), got ${s.length}`);return new Promise(((e,t)=>{const n=A.bind(null,{resolve:e,reject:t});s.push(n),r.sendMessage(...s)}))},w={runtime:{onMessage:l(d),onMessageExternal:l(d),sendMessage:u.bind(null,"sendMessage",{minArgs:1,maxArgs:3})},tabs:{sendMessage:u.bind(null,"sendMessage",{minArgs:2,maxArgs:3})}},p={clear:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}};return s.privacy={network:{"*":p},services:{"*":p},websites:{"*":p}},m(e,w,s)};if("object"!=typeof chrome||!chrome||!chrome.runtime||!chrome.runtime.id)throw new Error("This script should only be loaded in a browser extension.");e.exports=s(chrome)}else e.exports=browser},"function"==typeof define&&define.amd?define("webextension-polyfill",["module"],r):r(e)}));var a=(e,t)=>{class r extends Error{}class s extends Error{}class n extends Error{}class a extends Error{}class o extends Error{}class i extends Error{}const g=async(t,s,n)=>{try{const a=await window.top.fetch(`${e}${n?"/point_api/":"/v1/api/"}${t}`,{cache:"no-cache",credentials:"include",keepalive:!0,...s,headers:{"Content-Type":"application/json",...s?.headers}});if(!a.ok){const{ok:e,status:t,statusText:s,headers:n}=a;throw console.error("SDK call failed:",{ok:e,status:t,statusText:s,headers:Object.fromEntries([...n.entries()])}),new r("Point SDK request failed")}try{return await a.json()}catch(e){throw console.error("Point API response parsing error:",e),e}}catch(e){throw console.error("Point API call failed:",e),e}},m={get:(e,t,r,s)=>g(`${e}${t?"?":""}${new URLSearchParams(t).toString()}`,{method:"GET",headers:r},s),post:(e,t,r,s)=>g(e,{method:"POST",headers:r,body:JSON.stringify({...t,_csrf:window.localStorage.getItem("csrf_token")})},s),postFile:(t,s)=>(async(t,s)=>{try{const n=await window.top.fetch(`${e}/${t}`,{cache:"no-cache",credentials:"include",keepalive:!0,...s});if(!n.ok){const{ok:e,status:t,statusText:s,headers:a}=n;throw console.error("SDK ZProxy call failed:",{ok:e,status:t,statusText:s,headers:Object.fromEntries([...a.entries()])}),new r("Point SDK request failed")}try{return await n.json()}catch(e){throw console.error("Point API response parsing error:",e),e}}catch(e){throw console.error("Point API call failed:",e),e}})(t,{method:"POST",body:s})};function l(e){return new Promise((t=>setTimeout(t,e)))}const c={},d={},A={},u="subscription_confirmation",w="subscription_cancellation",p="subscription_event",x="subscription_error",h="subscribeContractEvent",f="removeSubscriptionById",b=({type:e,params:{contract:t,event:r}={}})=>`${e}_${t}_${r}`,y=e=>d[e]||(d[e]=[]),v={},k=(e,{messageQueueSizeLimit:t=1e3}={})=>new Promise(((r,g)=>{if(void 0!==c[e])return void r(c[e]);const m=new WebSocket(`${e}?token=POINTSDK_TOKEN`);m.onopen=()=>r(Object.assign(c[e]=m,{async subscribeToContractEvent(e){const t={type:h,params:e},r=b(t);v[r]=function(){let e=()=>{},t=()=>{};return Object.assign(new Promise(((r,s)=>{e=r,t=s})),{resolve:e,reject:t})}(),await m.send(JSON.stringify(t));const s=await Promise.race([v[r],(n=1e4,new Promise(((e,t)=>setTimeout((()=>t(new o("Subscription confirmation timeout"))),n))))]);var n;const a=y(s);return Object.assign((async()=>{for(;;)try{const e=A[s];if(e)throw e;if(a.length)return a.shift();await l(100)}catch(e){throw console.error("subscribed message error:",e),e}}),{unsubscribe:()=>m.send(JSON.stringify({type:f,params:{subscriptionId:s}}))})}})),m.onerror=e=>{for(const t in d)A[t]||(A[t]=new n(e.toString()))},m.onclose=t=>{if(delete c[e],1e3===t.code||1001===t.code)r(void 0);else{for(const e in d)A[e]||(A[e]=new a(t.toString()));g()}},m.onmessage=e=>{try{const{type:r,request:n,subscriptionId:a,data:o}=JSON.parse(e.data);switch(r){case u:{const e=b(n),{resolve:t,reject:r}=v[e]||{};"string"!=typeof a?"function"==typeof r&&r(new i(`Invalid subscription id "${a}" for request id: "${e}"`)):"function"==typeof t&&t(a);break}case w:a&&(console.info({type:r,request:n,subscriptionId:a,data:o}),delete d[a],delete A[a]);break;case p:if(a){const e=y(a);e.length>t?A[a]=new s("ZProxy WS message queue overflow"):e.push(o)}else console.error("Unable to identify subscription channel",{subscriptionId:a,request:n,data:o});break;case x:a?A[a]=new i(JSON.stringify(o)):console.error("Unable to identify subscription channel",{subscriptionId:a,request:n,data:o});break;default:console.error("Unsupported event type:",{type:r,request:n,subscriptionId:a,data:o})}}catch(e){console.error("Web Socket onmessage error:",e)}}})),_=e=>new Promise(((t,r)=>{const s=Math.random(),n=e=>{e.data.__page_req_id===s&&"to_page"===e.data.__direction&&(window.removeEventListener("message",n),e.data.code?r({code:e.data.code,message:e.data.message}):t(e.data.result))};window.addEventListener("message",n),window.postMessage({messageId:e,__message_type:"registerHandler",__page_req_id:s,__direction:"to_bg"})}));return{version:t,status:{ping:()=>m.get("status/ping",void 0,{"wallet-token":"WALLETID-PASSCODE"})},contract:{load:({contract:e,...t})=>m.get(`contract/load/${e}`,t,{"wallet-token":"WALLETID-PASSCODE"}),call:async({contract:e,method:t,params:r})=>{const{data:{abi:s,address:n}}=await m.get(`contract/load/${e}`,{},{"wallet-token":"WALLETID-PASSCODE"}),a=s.find((e=>e.name===t));if(!a)throw new Error(`Method ${t} not found in contract ${e}`);const o=r??[];if(o.length!==a.inputs.length)throw new Error(`Invalid number of params, expected ${a.inputs.length}, got ${o.length}`);for(let e=0;e<o.length;e++)"bytes32"!==a.inputs[e].internalType||"string"!=typeof o[e]||o[e].startsWith("0x")||(o[e]=`0x${o[e]}`);const{data:i}=await m.post("contract/encodeFunctionCall",{jsonInterface:a,params:o},{"wallet-token":"WALLETID-PASSCODE"}),g=await window.top.ethereum.request({method:"eth_requestAccounts"});switch(a.stateMutability){case"view":case"pure":const t=await window.top.ethereum.request({method:"eth_call",params:[{from:g[0],to:n,data:i},"latest"]});return{data:(await m.post("contract/decodeParameters",{typesArray:a.outputs,hexString:t},{"wallet-token":"WALLETID-PASSCODE"})).data[0]};case"nonpayable":return window.top.ethereum.request({meta:{contract:e},method:"eth_sendTransaction",params:[{from:g[0],to:n,data:i}]});case"payable":throw new Error("Do not use call for payable functions, use send instead");default:throw new Error(`Unexpected function state mutability ${a.stateMutability}`)}},send:async({contract:e,method:t,params:r,value:s})=>{const{data:{abi:n,address:a}}=await m.get(`contract/load/${e}`,{},{"wallet-token":"WALLETID-PASSCODE"}),o=await window.top.ethereum.request({method:"eth_requestAccounts"}),i=n.find((e=>e.name===t));if(!i)throw new Error(`Method ${t} not found in contract ${e}`);const g=r??[];if(g.length!==i.inputs.length)throw new Error(`Invalid number of params, expected ${i.inputs.length}, got ${g.length}`);for(let e=0;e<g.length;e++)"bytes32"!==i.inputs[e].internalType||"string"!=typeof g[e]||g[e].startsWith("0x")||(g[e]=`0x${g[e]}`);if(["view","pure"].includes(i.stateMutability))throw new Error(`Method ${t} is a view one, use call instead of send`);const{data:l}=await m.post("contract/encodeFunctionCall",{jsonInterface:i,params:r??[]});return window.top.ethereum.request({meta:{contract:e},method:"eth_sendTransaction",params:[{from:o[0],to:a,data:l,value:s}]})},events:e=>m.post("contract/events",e,{"wallet-token":"WALLETID-PASSCODE"}),async subscribe({contract:t,event:s,...n}){if("string"!=typeof t)throw new r(`Invalid contract ${t}`);if("string"!=typeof s)throw new r(`Invalid event ${s}`);const a=new URL(e);a.protocol="https:"===a.protocol?"wss:":"ws:",a.pathname+=a.pathname.endsWith("/")?"ws":"/ws";const o=await k(a.toString());if(!o)throw new r("Failed to establish web socket connection");return o.subscribeToContractEvent({contract:t,event:s,...n})}},storage:{postFile:e=>m.postFile("_storage/",e),getString:({id:e,...t})=>m.get(`storage/getString/${e}`,t,{"wallet-token":"WALLETID-PASSCODE"}),putString:e=>m.post("storage/putString",e,{"wallet-token":"WALLETID-PASSCODE"})},wallet:{address:()=>m.get("wallet/address"),..."https://confirmation-window"===e?{hash:()=>m.get("wallet/hash",{},{},!0)}:{},publicKey:()=>m.get("wallet/publicKey",{},{"wallet-token":"WALLETID-PASSCODE"}),balance:e=>{if(!e)throw new Error("No network specified");return m.get("wallet/balance",{network:e})},send:async({to:e,network:t,value:r})=>{const{networks:s,default_network:n}=await m.get("blockchain/networks"),a=t??n;if(!s[a])throw new Error(`Unknown network ${a}`);switch(s[a].type){case"eth":const t=await window.top.ethereum.request({method:"eth_requestAccounts"});return window.top.ethereum.request({method:"eth_sendTransaction",params:[{from:t[0],to:e,value:r}],chain:a});case"solana":return window.top.solana.request({method:"solana_sendTransaction",params:[{to:e,lamports:r}],chain:a});default:throw new Error(`Unexpected network type ${s[a].type}`)}},encryptData:({publicKey:e,data:t,...r})=>m.post("wallet/encryptData",{publicKey:e,data:t,...r},{"wallet-token":"WALLETID-PASSCODE"}),decryptData:({data:e,...t})=>m.post("wallet/decryptData",{data:e,...t},{"wallet-token":"WALLETID-PASSCODE"})},identity:{publicKeyByIdentity:({identity:e,...t})=>m.get(`identity/publicKeyByIdentity/${e}`,t,{"wallet-token":"WALLETID-PASSCODE"}),identityToOwner:({identity:e,...t})=>m.get(`identity/identityToOwner/${e}`,t,{"wallet-token":"WALLETID-PASSCODE"}),ownerToIdentity:({owner:e,...t})=>m.get(`identity/ownerToIdentity/${e}`,t,{"wallet-token":"WALLETID-PASSCODE"}),me:()=>m.get("identity/isIdentityRegistered/",void 0,{"wallet-token":"WALLETID-PASSCODE"})},..."https://point"===e?{point:{wallet_send:async({to:e,network:t,value:r})=>{const s=String(Math.random());await Promise.all([_(s),(async()=>{if(200!==(await m.post("wallet/send",{to:e,network:t,value:r,messageId:s},{},!0)).status)throw new Error("Failed to send token")})()])},wallet_send_token:async({to:e,network:t,tokenAddress:r,value:s})=>{const n=String(Math.random());await Promise.all([_(n),(async()=>{if(200!==(await m.post("wallet/sendToken",{to:e,network:t,value:s,tokenAddress:r,messageId:n},{},!0)).status)throw new Error("Failed to send token")})()])}}}:{}}};var o=()=>{function e(e){return new Promise(((t,r)=>{const s=Math.random(),n=e=>{e.data.__page_req_id===s&&"to_page"===e.data.__direction&&(window.removeEventListener("message",n),e.data.code?r({code:e.data.code,message:e.data.message}):e.data.error?r({code:e.data.error.code,message:e.data.error.message}):t(e.data.result))};window.addEventListener("message",n),window.postMessage({...e,__provider:"eth",__message_type:"rpc",__page_req_id:s,__direction:"to_bg"})}))}return{request:e,send:t=>e({method:t})}};var i=()=>{const e=e=>new Promise(((t,r)=>{const s=Math.random(),n=e=>{e.data.__page_req_id===s&&"to_page"===e.data.__direction&&(window.removeEventListener("message",n),e.data.code?r({code:e.data.code,message:e.data.message}):e.data.error?r({code:e.data.error.code,message:e.data.error.message}):t(e.data.result))};window.addEventListener("message",n),window.postMessage({...e,__message_type:"rpc",__provider:"solana",__page_req_id:s,__direction:"to_bg"})}));return{connect:async()=>({publicKey:(await e({method:"solana_requestAccount"})).publicKey}),disconnect:async()=>{},request:e,signAndSendTransaction:t=>e({method:"solana_sendTransaction",params:[t.toJSON()]})}};const g=e(n("cCnjn")).runtime.getManifest().version;try{window.wrappedJSObject.eval(`window.point = (${a.toString()})(window.location.origin, "${g}");`)}catch(e){console.error("Failed to inject point sdk: ",e)}try{window.wrappedJSObject.eval(`window.ethereum = (${o.toString()})();`)}catch(e){console.error("Failed to inject window.ethereum: ",e)}try{window.wrappedJSObject.eval(`window.solana = (${i.toString()})();`)}catch(e){console.error("Failed to inject window.solana: ",e)}})();
//# sourceMappingURL=index.js.map
