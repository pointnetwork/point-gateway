/* eslint-disable */
(()=>{window.top.IS_GATEWAY=!0;var e=(e,t)=>{class a extends Error{}class o extends Error{}class n extends Error{}class r extends Error{}class s extends Error{}class i extends Error{}const c=async()=>window.top.IS_GATEWAY?window.top.POINT_JWT:new Promise(((e,t)=>{const a=Math.random(),o=n=>{n.data.__page_req_id===a&&"to_page"===n.data.__direction&&(window.removeEventListener("message",o),n.data.code?t({code:n.data.code,message:n.data.message}):e(n.data.token))};window.addEventListener("message",o),window.postMessage({__page_req_id:a,__message_type:"getAuthToken",__direction:"to_bg"})})),d=async(t,o,n)=>{try{const r=await c(),s=await window.top.fetch(`${e}${n?"/point_api/":"/v1/api/"}${t}`,{cache:"no-cache",credentials:"include",keepalive:!0,...o,headers:{"Content-Type":"application/json","X-Point-Token":`Bearer ${r}`,...o?.headers}});if(!s.ok){const{ok:e,status:t,statusText:o,headers:n}=s;throw console.error("SDK call failed:",{ok:e,status:t,statusText:o,headers:Object.fromEntries([...n.entries()])}),new a("Point SDK request failed")}try{return await s.json()}catch(e){throw console.error("Point API response parsing error:",e),e}}catch(e){throw console.error("Point API call failed:",e),e}},w=async(t,o)=>{try{const n=await c(),r=await window.top.fetch(`${e}/${t}`,{cache:"no-cache",credentials:"include",keepalive:!0,...o,headers:{"X-Point-Token":`Bearer ${n}`,...o?.headers??{}}});if(!r.ok){const{ok:e,status:t,statusText:o,headers:n}=r;throw console.error("SDK ZProxy call failed:",{ok:e,status:t,statusText:o,headers:Object.fromEntries([...n.entries()])}),new a("Point SDK request failed")}try{return await r.json()}catch(e){throw console.error("Point API response parsing error:",e),e}}catch(e){throw console.error("Point API call failed:",e),e}},l={get:(e,t,a,o)=>d(`${e}${t?"?":""}${new URLSearchParams(t).toString()}`,{method:"GET",headers:a},o),post:(e,t,a,o)=>d(e,{method:"POST",headers:a,body:JSON.stringify({...t,_csrf:window.localStorage.getItem("csrf_token")})},o),postFile:(e,t)=>w(e,{method:"POST",body:t}),encryptAndPostFile:(e,t,a,o)=>w(e,{method:"POST",body:t,headers:{identities:a.join(","),metadata:o?.join(",")??""}})};function p(e){return new Promise((t=>setTimeout(t,e)))}const u={},m={},h={},g="subscription_confirmation",_="subscription_cancellation",y="subscription_event",f="subscription_error",b="subscribeContractEvent",v="removeSubscriptionById",k=({type:e,params:{contract:t,event:a}={}})=>`${e}_${t}_${a}`,$=e=>m[e]||(m[e]=[]),S={},E=(e,{messageQueueSizeLimit:t=1e3}={})=>new Promise(((a,d)=>{if(void 0!==u[e])return void a(u[e]);const w=new WebSocket(e);w.onopen=()=>a(Object.assign(u[e]=w,{async subscribeToContractEvent(e){const t={type:b,params:e,__point_token:await c()},a=k(t);S[a]=function(){let e=()=>{},t=()=>{};return Object.assign(new Promise(((a,o)=>{e=a,t=o})),{resolve:e,reject:t})}(),await w.send(JSON.stringify(t));const o=await Promise.race([S[a],(n=1e4,new Promise(((e,t)=>setTimeout((()=>t(new s("Subscription confirmation timeout"))),n))))]);var n;const r=$(o);return Object.assign((async()=>{for(;;)try{const e=h[o];if(e)throw e;if(r.length)return r.shift();await p(100)}catch(e){throw console.error("subscribed message error:",e),e}}),{unsubscribe:async()=>w.send(JSON.stringify({type:v,params:{subscriptionId:o},__point_token:await c()}))})}})),w.onerror=e=>{for(const t in m)h[t]||(h[t]=new n(e.toString()))},w.onclose=t=>{if(delete u[e],1e3===t.code||1001===t.code)a(void 0);else{for(const e in m)h[e]||(h[e]=new r(t.toString()));d()}},w.onmessage=e=>{try{const{type:a,request:n,subscriptionId:r,data:s}=JSON.parse(e.data);switch(a){case g:{const e=k(n),{resolve:t,reject:a}=S[e]||{};"string"!=typeof r?"function"==typeof a&&a(new i(`Invalid subscription id "${r}" for request id: "${e}"`)):"function"==typeof t&&t(r);break}case _:r&&(console.info({type:a,request:n,subscriptionId:r,data:s}),delete m[r],delete h[r]);break;case y:if(r){const e=$(r);e.length>t?h[r]=new o("ZProxy WS message queue overflow"):e.push(s)}else console.error("Unable to identify subscription channel",{subscriptionId:r,request:n,data:s});break;case f:r?h[r]=new i(JSON.stringify(s)):console.error("Unable to identify subscription channel",{subscriptionId:r,request:n,data:s});break;default:console.error("Unsupported event type:",{type:a,request:n,subscriptionId:r,data:s})}}catch(e){console.error("Web Socket onmessage error:",e)}}})),P=e=>new Promise(((t,a)=>{const o=Math.random(),n=e=>{e.data.__page_req_id===o&&"to_page"===e.data.__direction&&(window.removeEventListener("message",n),e.data.code?a({code:e.data.code,message:e.data.message}):t(e.data.result))};window.addEventListener("message",n),window.postMessage({messageId:e,__message_type:"registerHandler",__page_req_id:o,__direction:"to_bg"})}));return{version:t,status:{ping:()=>l.get("status/ping")},contract:{load:({contract:e,...t})=>l.get(`contract/load/${e}`,t),call:async({contract:e,method:t,params:a})=>{if(window.top.IS_GATEWAY){return(await l.post("contract/safe_call",{contract:e,method:t,params:a})).data}const{data:{abi:o,address:n}}=await l.get(`contract/load/${e}`,{}),r=o.find((e=>e.name===t));if(!r)throw new Error(`Method ${t} not found in contract ${e}`);const s=a??[];if(s.length!==r.inputs.length)throw new Error(`Invalid number of params, expected ${r.inputs.length}, got ${s.length}`);for(let e=0;e<s.length;e++)"bytes32"!==r.inputs[e].internalType||"string"!=typeof s[e]||s[e].startsWith("0x")||(s[e]=`0x${s[e]}`);const{data:i}=await l.post("contract/encodeFunctionCall",{jsonInterface:r,params:s}),c=await window.top.ethereum.request({method:"eth_requestAccounts"});switch(r.stateMutability){case"view":case"pure":const t=await window.top.ethereum.request({method:"eth_call",params:[{from:c[0],to:n,data:i},"latest"]});return{data:(await l.post("contract/decodeParameters",{typesArray:r.outputs,hexString:t})).data[0]};case"nonpayable":return window.top.ethereum.request({meta:{contract:e},method:"eth_sendTransaction",params:[{from:c[0],to:n,data:i}]});case"payable":throw new Error("Do not use call for payable functions, use send instead");default:throw new Error(`Unexpected function state mutability ${r.stateMutability}`)}},send:async({contract:e,method:t,params:a,value:o})=>{const{data:{abi:n,address:r}}=await l.get(`contract/load/${e}`,{}),s=await window.top.ethereum.request({method:"eth_requestAccounts"}),i=n.find((e=>e.name===t));if(!i)throw new Error(`Method ${t} not found in contract ${e}`);const c=a??[];if(c.length!==i.inputs.length)throw new Error(`Invalid number of params, expected ${i.inputs.length}, got ${c.length}`);for(let e=0;e<c.length;e++)"bytes32"!==i.inputs[e].internalType||"string"!=typeof c[e]||c[e].startsWith("0x")||(c[e]=`0x${c[e]}`);if(["view","pure"].includes(i.stateMutability))throw new Error(`Method ${t} is a view one, use call instead of send`);const{data:d}=await l.post("contract/encodeFunctionCall",{jsonInterface:i,params:a??[]});return window.top.ethereum.request({meta:{contract:e},method:"eth_sendTransaction",params:[{from:s[0],to:r,data:d,value:o}]})},events:e=>l.post("contract/events",e),async subscribe({contract:t,event:o,...n}){if("string"!=typeof t)throw new a(`Invalid contract ${t}`);if("string"!=typeof o)throw new a(`Invalid event ${o}`);const r=new URL(e);r.protocol="https:"===r.protocol?"wss:":"ws:",r.pathname+=r.pathname.endsWith("/")?"ws":"/ws";const s=await E(r.toString());if(!s)throw new a("Failed to establish web socket connection");return s.subscribeToContractEvent({contract:t,event:o,...n})}},storage:{postFile:e=>l.postFile("_storage/",e),encryptAndPostFile:(e,t,a)=>l.encryptAndPostFile("_encryptedStorage/",e,t,a),getString:({id:e,...t})=>l.get(`storage/getString/${e}`,t),getFile:async({id:t})=>{const a=await c();return(await window.top.fetch(`${e}/_storage/${t}`,{headers:{"X-Point-Token":`Bearer ${a}`}})).blob()},getEncryptedFile:async({id:t,eSymmetricObj:a,symmetricObj:o})=>{if(!!a==!!o)throw new Error("Either eSymmetricObj or symmetricObj should be specified, and only one of them");const n=await c();return(await window.top.fetch(`${e}/_encryptedStorage/${t}${a?`?eSymmetricObj=${a}`:""}${o?`?symmetricObj=${o}`:""}`,{headers:{"X-Point-Token":`Bearer ${n}`}})).blob()},putString:e=>l.post("storage/putString",e)},wallet:{address:()=>l.get("wallet/address"),..."https://confirmation-window"===e?{hash:()=>l.get("wallet/hash",{},{},!0)}:{},publicKey:()=>l.get("wallet/publicKey",{}),balance:e=>{if(!e)throw new Error("No network specified");return l.get("wallet/balance",{network:e})},send:async({to:e,network:t,value:a})=>{const{networks:o,default_network:n}=await l.get("blockchain/networks"),r=t??n;if(!o[r])throw new Error(`Unknown network ${r}`);switch(o[r].type){case"eth":const t=await window.top.ethereum.request({method:"eth_requestAccounts"});return window.top.ethereum.request({method:"eth_sendTransaction",params:[{from:t[0],to:e,value:a}],chain:r});case"solana":return window.top.solana.request({method:"solana_sendTransaction",params:[{to:e,lamports:a}],chain:r});default:throw new Error(`Unexpected network type ${o[r].type}`)}},encryptData:({publicKey:e,data:t,...a})=>l.post("wallet/encryptData",{publicKey:e,data:t,...a}),decryptData:({data:e,...t})=>l.post("wallet/decryptData",{data:e,...t})},identity:{publicKeyByIdentity:({identity:e,...t})=>l.get(`identity/publicKeyByIdentity/${e}`,t),identityToOwner:({identity:e,...t})=>l.get(`identity/identityToOwner/${e}`,t),ownerToIdentity:({owner:e,...t})=>l.get(`identity/ownerToIdentity/${e}`,t),me:()=>l.get("identity/isIdentityRegistered/")},..."https://point"===e?{point:{wallet_send:async({to:e,network:t,value:a})=>{const o=String(Math.random());await Promise.all([P(o),(async()=>{if(200!==(await l.post("wallet/send",{to:e,network:t,value:a,messageId:o},{},!0)).status)throw new Error("Failed to send token")})()])},wallet_send_token:async({to:e,network:t,tokenAddress:a,value:o})=>{const n=String(Math.random());await Promise.all([P(n),(async()=>{if(200!==(await l.post("wallet/sendToken",{to:e,network:t,value:o,tokenAddress:a,messageId:n},{},!0)).status)throw new Error("Failed to send token")})()])},set_auth_token:e=>new Promise(((t,a)=>{const o=Math.random(),n=e=>{e.data.__page_req_id===o&&"to_page"===e.data.__direction&&(window.removeEventListener("message",n),e.data.code?a({code:e.data.code,message:e.data.message}):t(e.data))};window.addEventListener("message",n),window.postMessage({token:e,__page_req_id:o,__message_type:"setAuthToken",__direction:"to_bg"})})),get_auth_token:c}}:{}}};var t=()=>{function e(e){return new Promise(((t,a)=>{const o=Math.random(),n=e=>{e.data.__page_req_id===o&&"to_page"===e.data.__direction&&(window.removeEventListener("message",n),e.data.code?a({code:e.data.code,message:e.data.message}):e.data.error?a({code:e.data.error.code,message:e.data.error.message}):t(e.data.result))};window.addEventListener("message",n),window.postMessage({...e,__provider:"eth",__message_type:"rpc",__page_req_id:o,__direction:"to_bg"})}))}return{request:e,send:t=>e({method:t})}};var a=()=>{const e=e=>new Promise(((t,a)=>{const o=Math.random(),n=e=>{e.data.__page_req_id===o&&"to_page"===e.data.__direction&&(window.removeEventListener("message",n),e.data.code?a({code:e.data.code,message:e.data.message}):e.data.error?a({code:e.data.error.code,message:e.data.error.message}):t(e.data.result))};window.addEventListener("message",n),window.postMessage({...e,__message_type:"rpc",__provider:"solana",__page_req_id:o,__direction:"to_bg"})}));return{connect:async()=>({publicKey:(await e({method:"solana_requestAccount"})).publicKey}),disconnect:async()=>{},request:e,signAndSendTransaction:t=>e({method:"solana_sendTransaction",params:[t.toJSON()]})}};var o={ynet:{name:"Ynet",type:"eth",currency:"yPoint"},rinkeby:{name:"Rinkeby",type:"eth",currency:"rinkebyEth"},solana_devnet:{name:"Solana Devnet",type:"solana",currency:"DevSol"}};console.log("Im point injector");const n=browser.runtime.getManifest().version;window.point=e(window.location.origin,n),window.point.networks=o,window.ethereum=t(),window.solana=a()})();